{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifsGalleryItem.js","components/GifsGallery.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","_ref","setCategories","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","react_default","a","createElement","onSubmit","e","preventDefault","trim","length","cats","concat","toConsumableArray","type","value","onChange","target","getGif","asyncToGenerator","regenerator_default","mark","_callee","category","url","resp","_yield$resp$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","img","id","title","images","downsized_medium","abrupt","stop","_x","apply","this","arguments","GifsGalleryItem","className","src","alt","GifsGallery","_useFetchGifs","loading","state","setState","useEffect","then","imgs","useFetchGifs","Fragment","GifsGalleryItem_GifsGalleryItem","assign","key","GifExpertApp","categories","AddCategory_AddCategory","GifsGallery_GifsGallery","ReactDOM","render","GifExpertApp_GifExpertApp","document","getElementById"],"mappings":"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","file":"static/js/main.dc84480d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handelInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2) {\r\n      setCategories( cats => [ inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    \r\n    <form onSubmit= { handelSubmit } >\r\n      <input \r\n        type=\"text\"\r\n        value= { inputValue }\r\n        onChange= { handelInputChange }\r\n      />\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n  export const getGif = async ( category ) => {\r\n    const apiKey = 'JSyPwfSCvGnW7mz8n5IL21LorcSDsDm0';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${ apiKey }`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url\r\n      }\r\n    })\r\n\r\n    return gifs;\r\n  };","import React from 'react';\r\n\r\nexport const GifsGalleryItem = ( { title, url } ) => {\r\n\r\n  return (\r\n    <div className='card animate__animated animate__bounce'>\r\n      <center>\r\n        <img src = { url } alt = { title} />      \r\n        <p> { title }</p>\r\n      </center> \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifsGalleryItem } from './GifsGalleryItem';\r\n\r\nexport const GifsGallery = ({ category }) => {\r\n\r\n  const {data:images, loading } = useFetchGifs( category );\r\n  return (\r\n    <>\r\n      <h2> { category } </h2>\r\n      { loading && <p className='animate__animated animate__bounce animate__delay-2s'>Cargando...</p> }\r\n      <div className='card-grid'>\r\n        {\r\n          images.map((img) => (\r\n            <GifsGalleryItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGif } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category)\r\n      .then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifsGallery } from './GifsGallery';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Naruto Shippuden']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories = { setCategories } />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifsGallery \r\n              key = { category }\r\n              category = { category }\r\n            />\r\n            \r\n          ))\r\n        }\r\n      </ol>\r\n      \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GifExpertApp } from './components/GifExpertApp';\r\n\r\nimport './css/index.css';\r\n\r\nReactDOM.render( \r\n  <GifExpertApp />, \r\n  document.getElementById('root') \r\n);"],"sourceRoot":""}